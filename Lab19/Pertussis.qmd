---
title: "19: Mini Project: Investigating Pertussis Resurgence"
author: "Nicolò (PID: 18109144)"
format: pdf
---

# 1. Investigating pertussis cases by year

> Q1. With the help of the R “addin” package datapasta assign the CDC pertussis case number data to a data frame called cdc and use ggplot to make a plot of cases numbers over time.

```{r}
cdc <- data.frame(
                                 Year = c(1922L,1923L,1924L,1925L,
                                          1926L,1927L,1928L,1929L,1930L,1931L,
                                          1932L,1933L,1934L,1935L,1936L,
                                          1937L,1938L,1939L,1940L,1941L,1942L,
                                          1943L,1944L,1945L,1946L,1947L,
                                          1948L,1949L,1950L,1951L,1952L,
                                          1953L,1954L,1955L,1956L,1957L,1958L,
                                          1959L,1960L,1961L,1962L,1963L,
                                          1964L,1965L,1966L,1967L,1968L,1969L,
                                          1970L,1971L,1972L,1973L,1974L,
                                          1975L,1976L,1977L,1978L,1979L,1980L,
                                          1981L,1982L,1983L,1984L,1985L,
                                          1986L,1987L,1988L,1989L,1990L,
                                          1991L,1992L,1993L,1994L,1995L,1996L,
                                          1997L,1998L,1999L,2000L,2001L,
                                          2002L,2003L,2004L,2005L,2006L,2007L,
                                          2008L,2009L,2010L,2011L,2012L,
                                          2013L,2014L,2015L,2016L,2017L,2018L,
                                          2019L,2020L,2021L),
         No..Reported.Pertussis.Cases = c(107473,164191,165418,152003,
                                          202210,181411,161799,197371,
                                          166914,172559,215343,179135,265269,
                                          180518,147237,214652,227319,103188,
                                          183866,222202,191383,191890,109873,
                                          133792,109860,156517,74715,69479,
                                          120718,68687,45030,37129,60886,
                                          62786,31732,28295,32148,40005,
                                          14809,11468,17749,17135,13005,6799,
                                          7717,9718,4810,3285,4249,3036,
                                          3287,1759,2402,1738,1010,2177,2063,
                                          1623,1730,1248,1895,2463,2276,
                                          3589,4195,2823,3450,4157,4570,
                                          2719,4083,6586,4617,5137,7796,6564,
                                          7405,7298,7867,7580,9771,11647,
                                          25827,25616,15632,10454,13278,
                                          16858,27550,18719,48277,28639,32971,
                                          20762,17972,18975,15609,18617,
                                          6124,2116)
       )
```

```{r}
library(ggplot2)

ggplot(cdc) +
  aes(Year, No..Reported.Pertussis.Cases) +
  geom_point() +
  geom_line() +
  labs(x = "Year", y = "Number of cases", title = "Pertussis Cases by Year (1922 - 2021)")
```

# 2. A tale of two vaccines (wP & aP)

> Q2. Using the ggplot geom_vline() function add lines to your previous plot for the 1946 introduction of the wP vaccine and the 1996 switch to aP vaccine (see example in the hint below). What do you notice?

```{r}
ggplot(cdc) +
  aes(Year, No..Reported.Pertussis.Cases) +
  geom_point() +
  geom_line() +
  labs(x = "Year", y = "Number of cases", title = "Pertussis Cases by Year (1922 - 2021)") +
  geom_vline(xintercept = 1946, color = "blue", linetype = "dashed") +
  geom_vline(xintercept = 1996, color = "red", linetype = "dashed")
```

> Q3. Describe what happened after the introduction of the aP vaccine? Do you have a possible explanation for the observed trend?

Pertussis cases started rising again. One possible explanation is that less people might be getting vaccinated recently.

# 3. Exploring CMI-PB data

## The CMI-PB API returns JSON data

The CMI-PB API (like most APIs) sends responses in JSON format. To read these types of files into R we will use the `read_json()` function from the jsonlite package.

```{r}
# Allows us to read, write and process JSON data
library(jsonlite)
```

Let’s now read the main subject database table from the CMI-PB API. 

```{r}
subject <- read_json("https://www.cmi-pb.org/api/subject", simplifyVector = TRUE)
head(subject, 3)
```

> Q4. How may aP and wP infancy vaccinated subjects are in the dataset?

```{r}
table(subject$infancy_vac)
```

> Q5. How many Male and Female subjects/patients are in the dataset?

```{r}
table(subject$biological_sex)
```

> Q6. What is the breakdown of race and biological sex (e.g. number of Asian females, White males etc…)?

```{r}
table(subject$race, subject$biological_sex)
```

## Side-Note: Working with dates

```{r}
library(lubridate)
```

> Q7. Using this approach determine (i) the average age of wP individuals, (ii) the average age of aP individuals; and (iii) are they significantly different?

```{r}
# age of wP individuals
wp_birth <- subject[which(subject$infancy_vac == "wP"),]$year_of_birth
round(summary(time_length( today() - ymd(wp_birth),  "years")))
```

```{r}
# average age of aP individuals
ap_birth <- subject[which(subject$infancy_vac == "aP"),]$year_of_birth
round(summary(time_length( today() - ymd(ap_birth),  "years")))
```

```{r}
x <- t.test(time_length(today() - ymd(wp_birth), "years"), time_length(today() - ymd(ap_birth), "years"))
x$p.value
```

They are significantly different.

> Q8. Determine the age of all individuals at time of boost?

```{r}
subject$age <- ymd(subject$date_of_boost) - ymd(subject$year_of_birth)
```

> Q9. With the help of a faceted boxplot or histogram (see below), do you think these two groups are significantly different?

```{r}
ggplot(subject) +
  aes(time_length(age, "year"),
      fill=as.factor(infancy_vac)) +
  geom_histogram(show.legend=FALSE) +
  facet_wrap(vars(infancy_vac), nrow=2) +
  xlab("Age in years")
```

The wto groups almost don't overlap, so they are significantly different.

## Joining multiple tables

Read the specimen and ab_titer tables into R and store the data as `specimen` and `titer` named data frames.

```{r}
# Complete the API URLs...
specimen <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE) 
titer <- read_json("https://www.cmi-pb.org/api/plasma_ab_titer", simplifyVector = TRUE) 
```

To know whether a given `specimen_id` comes from an aP or wP individual we need to link (a.k.a. “join” or merge) our `specimen` and `subject` data frames. The excellent dplyr package (that we have used previously) has a family of `join()` functions that can help us with this common task:

> Q9. Complete the code to join `specimen` and `subject` tables to make a new merged data frame containing all specimen records along with their associated subject details:

```{r}
library(dplyr)

meta <- inner_join(specimen, subject)
dim(meta)
head(meta)
```

> Q10. Now using the same procedure join `meta` with `titer` data so we can further analyze this data in terms of time of visit aP/wP, male/female etc.

```{r}
abdata <- inner_join(titer, meta)
dim(abdata)
```

> Q11. How many specimens (i.e. entries in `abdata`) do we have for each `isotype`?

```{r}
table(abdata$isotype)
```

> Q12. What are the different `$dataset` values in `abdata` and what do you notice about the number of rows for the most “recent” dataset?

```{r}
table(abdata$dataset)
```
The rows in the most recent database are significantly smaller.

# 4. Examine IgG Ab titer levels

Now using our joined/merged/linked `abdata` dataset `filter()` for IgG `isotype`.

```{r}
igg <- abdata %>% filter(isotype == "IgG")
head(igg)
```

> Q13. Complete the following code to make a summary boxplot of Ab titer levels (MFI) for all antigens:

```{r}
ggplot(igg) +
  aes(MFI_normalised, antigen) +
  geom_boxplot()
```

```{r}
ggplot(igg) +
  aes(MFI_normalised, antigen, col=infancy_vac) +
  geom_boxplot()
```

> Q15. Filter to pull out only two specific antigens for analysis and create a boxplot for each. You can chose any you like. Below I picked a “control” antigen (“OVA”, that is not in our vaccines) and a clear antigen of interest (“PT”, Pertussis Toxin, one of the key virulence factors produced by the bacterium B. pertussis).

Focus in on the IgG to PT antigen in the 2021 dataset:

```{r}
igg.pt <- igg %>% filter(antigen == "PT", dataset == "2021_dataset")

ggplot(igg.pt) +
  aes(planned_day_relative_to_boost, MFI_normalised, col = infancy_vac, group = subject_id) +
  geom_point() +
  geom_line() +
  geom_vline(xintercept=0, linetype="dashed") +
  geom_vline(xintercept=14, linetype="dashed")
```
