---
title: "Class 9: Halloween Mini-Project"
author: "Nicolò (PID: A18109144)"
format: pdf
---

# Exploratory Analysis of Halloween Candy

## 1. Importing candy data

```{r}
candy_file <- "candy-data.csv"

candy <- read.csv(candy_file, row.names=1)
head(candy)
```

>Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```

>Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```

## 2. What is your favorate candy?

```{r}
candy["Twix", ]$winpercent
```

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

My favorite candy is “Haribo Sour Bears”.

```{r}
candy["Haribo Sour Bears", ]$winpercent
```

> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat", ]$winpercent
```

> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars", ]$winpercent
```

Let's use the skim() function in the skimr package that can help give us a quick overview of the candy dataset.

```{r}
library("skimr")
skim(candy)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

winpercent

> Q7. What do you think a zero and one represent for the candy$chocolate column?

I think it indicates the presence or not of chocolate in that candy.

> Q8. Plot a histogram of winpercent values

```{r}
library("ggplot2")
ggplot(candy, aes(winpercent)) +
  geom_histogram(binwidth=10)
```

> Q9. Is the distribution of winpercent values symmetrical?

It is not.

> Q10. Is the center of the distribution above or below 50%?

It's below 50%.

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

```{r}
choc.inds <- as.logical(candy$chocolate)
fruit.inds <- as.logical(candy$fruity)
choc.win <- candy[choc.inds, "winpercent"]
fruit.win <- candy[fruit.inds, "winpercent"]

mean(choc.win) > mean(fruit.win)
```

On average, chocolate candy is higher ranked than fruity candy.

> Q12. Is this difference statistically significant?

```{r}
t.test(choc.win, fruit.win)
```

It is, since the p-value is very small

## 3. Overall Candy Rankings

> Q13. What are the five least liked candy types in this set?

```{r}
library("dplyr")

candy %>%
  arrange(winpercent) %>%
  head(5)
```

> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
candy %>%
  arrange(winpercent) %>%
  tail(5)
```

> Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
#| fig-height: 10

ggplot(candy) + 
  aes(winpercent, rownames(candy)) +
  geom_col(fill = "gray")
```

> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
#| fig-height: 10

ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy), winpercent)) +
  geom_col(fill = "gray")
```

### Time to add some useful color

Let’s setup a color vector (that signifies candy type) that we can then use for some future plots. We start by making a vector of all black values (one for each candy). Then we overwrite chocolate (for chocolate candy), brown (for candy bars) and red (for fruity candy) values.

```{r}
my_cols <- rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
```

And make a colored bar plot

```{r}
#| fig-height: 10

ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols) 
```
Now, for the first time, using this plot we can answer questions like:

> Q17. What is the worst ranked chocolate candy?

Sixlets

> Q18. What is the best ranked fruity candy?

Starburst

## 4. Taking a look at pricepercent

```{r}
library(ggrepel)

# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 5)
```

> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Reese's Miniatures

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```

Nik L Nip is the least popular within the 5 most expensive candies.

> Q21. Make a barplot again with geom_col() this time using pricepercent and then improve this step by step, first ordering the x-axis by value and finally making a so called “dot chat” or “lollipop” chart by swapping geom_col() for geom_point() + geom_segment()

```{r}
#| fig-height: 10

# Make a lollipop chart of pricepercent
ggplot(candy) +
  aes(pricepercent, reorder(rownames(candy), pricepercent)) +
  geom_segment(aes(yend = reorder(rownames(candy), pricepercent), 
                   xend = 0), col="gray40") +
    geom_point()
```

## 5. Exploring the correlation structure

```{r}
library(corrplot)

cij <- cor(candy)
corrplot(cij)
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

chocolate vs fuity  
bar vs pluribus

> Q23. Similarly, what two variables are most positively correlated?

chocolate with bar, pricepercent and winpercent

## 6. Principal Component Analysis

```{r}
pca <- prcomp(candy, scale=TRUE)
summary(pca)
```

Now we can plot our main PCA score plot of PC1 vs PC2

```{r}
plot(pca$x[,1:2])
```

We can change the plotting character and add some color:

```{r}
plot(pca$x[,1:2], col=my_cols, pch=16)
```

We can make a much nicer plot with the ggplot2 package but it is important to note that ggplot works best when you supply an input data.frame that includes a separate column for each of the aesthetics you would like displayed in your final plot. To accomplish this we make a new data.frame here that contains our PCA results with all the rest of our candy data. We will then use this for making plots below

```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])

p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p
```

Again we can use the ggrepel package and the function ggrepel::geom_text_repel() to label up the plot with non overlapping candy names like. We will also add a title and subtitle like so:

```{r}
p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

To have more candy labels we can change the max.overlaps value to allow more overlapping labels or pass the ggplot object p to plotly like so to generate an interactive plot that you can mouse over to see labels:

```{r}
# library(plotly)

# ggplotly(p)
```

Let’s finish by taking a quick look at PCA our loadings. Do these make sense to you? Notice the opposite effects of chocolate and fruity and the similar effects of chocolate and bar (i.e. we already know they are correlated).

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Fruity, hard and pluribus. It makes sense since they seem to be positively correlated with each other.